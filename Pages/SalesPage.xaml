<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             x:Class="inventory_mobile_app.Pages.SalesPage"
             Title="SalesPage"        
             BackgroundColor="#FFF6DF"
             Padding="0"
             xmlns:model="clr-namespace:inventory_mobile_app.Models"
             xmlns:viewmodel="clr-namespace:inventory_mobile_app.ViewModels">


    <Grid RowDefinitions="Auto, Auto, *" ColumnDefinitions="*" VerticalOptions="FillAndExpand" HorizontalOptions="FillAndExpand">
        <Grid Grid.Row="0" VerticalOptions="Start" HorizontalOptions="FillAndExpand" Padding="20" HeightRequest="90" >

            <!-- Logo -->
            <HorizontalStackLayout VerticalOptions="Center" Padding="10">
                <Image Source="pages_logo.png" WidthRequest="360" HeightRequest="250" />
            </HorizontalStackLayout>
        </Grid>

        <Label Text="SALES"
               FontSize="24" 
               FontFamily="Poppins-ExtraBold"
               FontAttributes="Bold"
               Margin="20,80,10,10"
               TextColor="#E76722" />

        <Button Text="ADD SALES" 
           BackgroundColor="#E76722"  
           TextColor="White" 
           CornerRadius="10"
           HeightRequest="38"
           WidthRequest="130"
           FontSize="16"
           Padding="6"
           FontFamily="Poppins-SemiBold"
           HorizontalOptions="End"
           VerticalOptions="Start"
           Margin="0,75,20,0"
            />  

        <!-- Bottom Navigation Bar -->
        <Grid Grid.Row="2" BackgroundColor="White" HeightRequest="60" VerticalOptions="End">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <StackLayout Grid.Column="0" Orientation="Vertical" HorizontalOptions="Center">
                <!-- Home Icon Label -->
                <Label Text="{x:Static model:Icons.HomeIcon}"
       Style="{StaticResource MaterialIcon}"
       HorizontalOptions="Center"
       Padding="0,7,0,0">
                    <Label.GestureRecognizers>
                        <TapGestureRecognizer Tapped="OnHomeClicked" />
                    </Label.GestureRecognizers>
                    <Label.Triggers>
                        <DataTrigger TargetType="Label" Binding="{Binding IsHomeSelected}" Value="True">
                            <Setter Property="TextColor" Value="{StaticResource SelectedColor}" />
                        </DataTrigger>
                        <DataTrigger TargetType="Label" Binding="{Binding IsHomeSelected}" Value="False">
                            <Setter Property="TextColor" Value="{StaticResource DefaultColor}" />
                        </DataTrigger>
                    </Label.Triggers>
                </Label>

                <!-- Home Text Label -->
                <Label Text="Home"
               HorizontalOptions="Center"
               FontSize="10"
               FontFamily="Poppins-Bold"
               TextColor="#979797"> 
                    <Label.Triggers>
                        <DataTrigger TargetType="Label" Binding="{Binding IsHomeSelected}" Value="True">
                            <Setter Property="TextColor" Value="{StaticResource SelectedColor}" />
                        </DataTrigger>
                        <DataTrigger TargetType="Label" Binding="{Binding IsHomeSelected}" Value="False">
                            <Setter Property="TextColor" Value="{StaticResource DefaultColor}" />
                        </DataTrigger>
                    </Label.Triggers>
                </Label>
            </StackLayout>

            <StackLayout Grid.Column="1" Orientation="Vertical" HorizontalOptions="Center">
                <!-- Inventory Icon Label -->
                <Label Text="{x:Static model:Icons.InventoryIcon}"
        Style="{StaticResource MaterialIcon}"
        HorizontalOptions="Center"
        Padding="0,7,0,0">
                    <Label.GestureRecognizers>
                        <TapGestureRecognizer Tapped="OnInventoryClicked" />
                    </Label.GestureRecognizers>
                    <Label.Triggers>
                        <DataTrigger TargetType="Label" Binding="{Binding IsInventorySelected}" Value="True">
                            <Setter Property="TextColor" Value="{StaticResource SelectedColor}" />
                        </DataTrigger>
                        <DataTrigger TargetType="Label" Binding="{Binding IsInventorySelected}" Value="False">
                            <Setter Property="TextColor" Value="{StaticResource DefaultColor}" />
                        </DataTrigger>
                    </Label.Triggers>
                </Label>

                <!-- Inventory Text Label -->
                <Label Text="Inventory"
        HorizontalOptions="Center"
        FontSize="10"
        FontFamily="Poppins-Bold"
        TextColor="#979797">
                    <Label.Triggers>
                        <DataTrigger TargetType="Label" Binding="{Binding IsInventorySelected}" Value="True">
                            <Setter Property="TextColor" Value="{StaticResource SelectedColor}" />
                        </DataTrigger>
                        <DataTrigger TargetType="Label" Binding="{Binding IsInventorySelected}" Value="False">
                            <Setter Property="TextColor" Value="{StaticResource DefaultColor}" />
                        </DataTrigger>
                    </Label.Triggers>
                </Label>
            </StackLayout>


            <StackLayout Grid.Column="2" Orientation="Vertical" HorizontalOptions="Center">
                <!-- Scan Icon Label -->
                <Label Text="{x:Static model:Icons.BarcodeIcon}"
        Style="{StaticResource BootstrapIcon}"
        HorizontalOptions="Center"
        Padding="0,7,0,0">
                    <Label.GestureRecognizers>
                        <TapGestureRecognizer Tapped="OnScanClicked" />
                    </Label.GestureRecognizers>
                    <Label.Triggers>
                        <DataTrigger TargetType="Label" Binding="{Binding IsScanSelected}" Value="True">
                            <Setter Property="TextColor" Value="{StaticResource SelectedColor}" />
                        </DataTrigger>
                        <DataTrigger TargetType="Label" Binding="{Binding IsScanSelected}" Value="False">
                            <Setter Property="TextColor" Value="{StaticResource DefaultColor}" />
                        </DataTrigger>
                    </Label.Triggers>
                </Label>

                <!-- Scan Text Label -->
                <Label Text="SCAN"
        HorizontalOptions="Center"
        FontSize="10"
        FontFamily="Poppins-Bold"
        TextColor="#979797">
                    <Label.Triggers>
                        <DataTrigger TargetType="Label" Binding="{Binding IsScanSelected}" Value="True">
                            <Setter Property="TextColor" Value="{StaticResource SelectedColor}" />
                        </DataTrigger>
                        <DataTrigger TargetType="Label" Binding="{Binding IsScanSelected}" Value="False">
                            <Setter Property="TextColor" Value="{StaticResource DefaultColor}" />
                        </DataTrigger>
                    </Label.Triggers>
                </Label>
            </StackLayout>

            <StackLayout Grid.Column="3" Orientation="Vertical" HorizontalOptions="Center">
                <!-- Sales Icon Label -->
                <Label Text="{x:Static model:Icons.SalesIcon}"
         Style="{StaticResource MaterialIcon}"
         HorizontalOptions="Center"
         Padding="0,7,0,0">
                    <Label.GestureRecognizers>
                        <TapGestureRecognizer Tapped="OnSalesClicked" />
                    </Label.GestureRecognizers>
                    <Label.Triggers>
                        <DataTrigger TargetType="Label" Binding="{Binding IsSalesSelected}" Value="True">
                            <Setter Property="TextColor" Value="{StaticResource SelectedColor}" />
                        </DataTrigger>
                        <DataTrigger TargetType="Label" Binding="{Binding IsSalesSelected}" Value="False">
                            <Setter Property="TextColor" Value="{StaticResource DefaultColor}" />
                        </DataTrigger>
                    </Label.Triggers>
                </Label>

                <!-- Sales Text Label -->
                <Label Text="Sales"
         HorizontalOptions="Center"
         FontSize="10"
         FontFamily="Poppins-Bold"
         TextColor="#979797">
                    <Label.Triggers>
                        <DataTrigger TargetType="Label" Binding="{Binding IsSalesSelected}" Value="True">
                            <Setter Property="TextColor" Value="{StaticResource SelectedColor}" />
                        </DataTrigger>
                        <DataTrigger TargetType="Label" Binding="{Binding IsSalesSelected}" Value="False">
                            <Setter Property="TextColor" Value="{StaticResource DefaultColor}" />
                        </DataTrigger>
                    </Label.Triggers>
                </Label>
            </StackLayout>

            <StackLayout Grid.Column="4" Orientation="Vertical" HorizontalOptions="Center">
                <!-- Settings Icon Label -->
                <Label Text="{x:Static model:Icons.SettingsIcon}"
         Style="{StaticResource MaterialIcon}"
         HorizontalOptions="Center"
         Padding="0,7,0,0">
                    <Label.GestureRecognizers>
                        <TapGestureRecognizer Tapped="OnSettingsClicked" />
                    </Label.GestureRecognizers>
                    <Label.Triggers>
                        <DataTrigger TargetType="Label" Binding="{Binding IsSettingsSelected}" Value="True">
                            <Setter Property="TextColor" Value="{StaticResource SelectedColor}" />
                        </DataTrigger>
                        <DataTrigger TargetType="Label" Binding="{Binding IsSettingsSelected}" Value="False">
                            <Setter Property="TextColor" Value="{StaticResource DefaultColor}" />
                        </DataTrigger>
                    </Label.Triggers>
                </Label>

                <!-- Settings Text Label -->
                <Label Text="Settings"
         HorizontalOptions="Center"
         FontSize="10"
         FontFamily="Poppins-Bold"
         TextColor="#979797">
                    <Label.Triggers>
                        <DataTrigger TargetType="Label" Binding="{Binding IsSettingsSelected}" Value="True">
                            <Setter Property="TextColor" Value="{StaticResource SelectedColor}" />
                        </DataTrigger>
                        <DataTrigger TargetType="Label" Binding="{Binding IsSettingsSelected}" Value="False">
                            <Setter Property="TextColor" Value="{StaticResource DefaultColor}" />
                        </DataTrigger>
                    </Label.Triggers>
                </Label>
            </StackLayout>
        </Grid>

    </Grid>
</ContentPage>